<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.conquernos</groupId>
	<artifactId>cinnamon</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>cinnamon</name>
	<url>https://github.com/conquernos/cinnamon</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<akka.scala.version>2.12</akka.scala.version>
		<akka.version>2.5.17</akka.version>
		<akka.http.version>10.1.3</akka.http.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<verbose>true</verbose>
					<fork>true</fork>
					<compilerVersion>1.8</compilerVersion>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>allinone</shadedClassifierName>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>akka.Main</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.0.0-M4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.22</version>
		</dependency>

		<!-- akka -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster-tools_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-remote_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-contrib_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-core_${akka.scala.version}</artifactId>
			<version>${akka.http.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http_${akka.scala.version}</artifactId>
			<version>${akka.http.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-jackson_${akka.scala.version}</artifactId>
			<version>${akka.http.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.romix.akka</groupId>
			<artifactId>akka-kryo-serialization_${akka.scala.version}</artifactId>
			<version>0.5.2</version>
		</dependency>

		<!-- 웹서버 기능을 위해서 사용되는 라이브러리 -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-camel_${akka.scala.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jetty</artifactId>
			<version>2.17.3</version>
		</dependency>

		<!-- importing classpath -->
		<dependency>
			<groupId>org.jodd</groupId>
			<artifactId>jodd-core</artifactId>
			<version>3.7.1</version>
		</dependency>

		<!-- datetime -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.1</version>
		</dependency>

		<!-- config -->
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- file system -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-vfs2</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- utilities -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.11</artifactId>
			<version>0.10.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>0.10.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.curator</groupId>
			<artifactId>curator-x-zkclient-bridge</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.6</version>
		</dependency>

		<!-- kafka monitoring -->
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-core</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-utils</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-output</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-packaging</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-examples</artifactId>
			<version>264</version>
		</dependency>
		<dependency>
			<groupId>org.jmxtrans</groupId>
			<artifactId>jmxtrans-test-utils</artifactId>
			<version>264</version>
		</dependency>

		<!-- kafka shema -->
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry-client</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>RELEASE</version>
		</dependency>

	</dependencies>
</project>
